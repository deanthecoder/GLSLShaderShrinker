<Window x:Class="Shrinker.WpfApp.MainWindow"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:local="clr-namespace:Shrinker.WpfApp"
                 xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                 xmlns:Controls="clr-namespace:DiffPlex.Wpf.Controls;assembly=DiffPlex.Wpf"
                 mc:Ignorable="d"
                 FontFamily="{materialDesign:MaterialDesignFont}"
                 TextElement.FontSize="14"
                 TextElement.FontWeight="Medium"
                 TextElement.Foreground="{DynamicResource MaterialDesignBody}"
                 Background="{DynamicResource MaterialDesignDarkBackground}"
                 UseLayoutRounding="True"
                 ResizeMode="CanResizeWithGrip"
                 Title="GLSL Shader Shrinker"
                 Icon="App.ico"
                 Height="800" Width="1280" MinHeight="400" MinWidth="1100"
                 d:DataContext="{d:DesignInstance local:AppViewModel}">
    <Window.InputBindings>
        <KeyBinding Command="{Binding OnLoadFromClipboardCommand}" Gesture="CTRL+V"/>
        <KeyBinding Command="{Binding OnSaveToClipboardCommand}" Gesture="CTRL+C"/>
    </Window.InputBindings>

    <materialDesign:DialogHost x:Name="rootHost" Identifier="RootHost">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!-- Import/Export/Options -->
            <materialDesign:DialogHost x:Name="importHost" Identifier="ImportHost" Grid.Row="0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <UniformGrid Columns="2">
                        <!-- Import options -->
                        <GroupBox Margin="16,16,8,16">
                            <GroupBox.Header>
                                <StackPanel Orientation="Horizontal">
                                    <materialDesign:PackIcon Kind="Import" Width="28" Height="28" Margin="0,0,8,0"/>
                                    <TextBlock FontSize="16" Text="GLSL Import" VerticalAlignment="Center"/>
                                </StackPanel>
                            </GroupBox.Header>

                            <StackPanel>
                                <Button Content="From Clipboard" Command="{Binding OnLoadFromClipboardCommand}" Foreground="White" Margin="16,4" ToolTip="CTRL+V"/>
                                <Button Content="From File..." Command="{Binding OnLoadFromFileCommand}" Foreground="White" Margin="16,4"/>
                                <Button Content="From Shadertoy..." Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}" Foreground="White" Margin="16,4"/>
                            </StackPanel>
                        </GroupBox>

                        <!-- Export options -->
                        <GroupBox Foreground="White" Margin="16,16,8,16">
                            <GroupBox.Header>
                                <StackPanel Orientation="Horizontal">
                                    <materialDesign:PackIcon Kind="Export" Width="28" Height="28" Margin="0,0,8,0"/>
                                    <TextBlock FontSize="16" Text="GLSL Export" VerticalAlignment="Center"/>
                                </StackPanel>
                            </GroupBox.Header>

                            <StackPanel>
                                <Button Content="To Clipboard" Command="{Binding OnSaveToClipboardCommand}" Foreground="White" Margin="16,4" ToolTip="CTRL+C"/>
                                <Button Content="To File..." Command="{Binding OnSaveToFileCommand}" Foreground="White" Margin="16,4"/>
                            </StackPanel>
                        </GroupBox>
                    </UniformGrid>

                    <!-- Shrink options -->
                    <GroupBox Grid.Column="2" Margin="16,16,8,16">
                        <GroupBox.Header>
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon Kind="ArrowCompress" Width="28" Height="28" Margin="0,0,8,0"/>
                                <TextBlock FontSize="16" Text="Shrink" VerticalAlignment="Center"/>
                            </StackPanel>
                        </GroupBox.Header>

                        <UniformGrid Columns="3">
                            <!-- Maximum -->
                            <Button Content="Maximum" Command="{Binding OnShrinkCommand}" CommandParameter="Max" Foreground="White" Margin="16,4"/>

                            <!-- Minimum -->
                            <Button Content="Minimum (/Reformat)" Command="{Binding OnShrinkCommand}" CommandParameter="Min" Foreground="White" Margin="16,4"/>

                            <!-- Custom -->
                            <Grid Margin="14,4">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Button x:Name="customShrinkButton" Content="Custom" Command="{Binding OnShrinkCommand}" CommandParameter="Custom" Foreground="White" Margin="0,0,4,0"/>
                                <Grid Grid.Column="1" IsEnabled="{Binding IsEnabled, ElementName=customShrinkButton}">
                                    <Button Foreground="White"
                                        Click="OnSettingsButtonClicked">
                                        <materialDesign:PackIcon Kind="Settings"/>
                                    </Button>
                                </Grid>
                            </Grid>
                        </UniformGrid>
                    </GroupBox>
                </Grid>

                <!-- Shadertoy import options -->
                <materialDesign:DialogHost.DialogContent>
                    <StackPanel Orientation="Horizontal" Margin="32">
                        <TextBox materialDesign:HintAssist.Hint="Shadertoy Shader ID (E.g. tt3yRH)"
                                 Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                 Text="{Binding ShadertoyShaderId}"
                                 Foreground="White"
                                 materialDesign:HintAssist.Foreground="LightGray"
                                 Margin="0,0,8,0"/>
                        <Button Command="{Binding OnLoadFromShadertoyCommand}" Margin="4" Foreground="White" ToolTip="Download">
                            <materialDesign:PackIcon Kind="Download" Width="16" Height="16"/>
                        </Button>
                        <Button Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" Margin="4" Foreground="White" ToolTip="Cancel">
                            <materialDesign:PackIcon Kind="Cancel" Width="16" Height="16"/>
                        </Button>
                    </StackPanel>
                </materialDesign:DialogHost.DialogContent>
            </materialDesign:DialogHost>

            <!-- Code preview -->
            <Grid Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <materialDesign:DialogHost Identifier="ProgressHost" Grid.Row="0" IsOpen="{Binding ShowProgress}">
                    <!-- Side-by-side diff control -->
                    <Controls:DiffViewer x:Name="DiffControl"
                                               Background="#1E1E1E"
                                               BorderBrush="DimGray"
                                               FontFamily="Consolas"
                                               Margin="4"
                                               BorderThickness="4"
                                               OldTextHeader="Original"
                                               NewTextHeader="New"
                                               IgnoreWhiteSpace="True"/>

                    <!-- 'Busy' message -->
                    <materialDesign:DialogHost.DialogContent>
                        <StackPanel Margin="48,16">
                            <ProgressBar
                            Style="{DynamicResource MaterialDesignCircularProgressBar}"
                            HorizontalAlignment="Center"
                            Margin="16"
                            IsIndeterminate="True"/>
                            <TextBlock Text="Optimizing..."/>
                        </StackPanel>
                    </materialDesign:DialogHost.DialogContent>
                </materialDesign:DialogHost>

                <!-- Original/Optimized character counts -->
                <UniformGrid Grid.Row="1" Columns="2" Margin="0,4,0,8">
                    <StackPanel Orientation="Horizontal" Margin="16,0,0,0">
                        <TextBlock Text="Original:" Margin="0,0,8,0"/>
                        <TextBlock Text="{Binding OriginalSize, StringFormat=N0}" Margin="0,0,4,0"/>
                        <TextBlock Text="characters" Margin="0,0,8,0"/>
                        <materialDesign:PackIcon Kind="InfoCircle" Width="16" Height="16" Foreground="{DynamicResource PrimaryHueLightBrush}"
                                             ToolTip="Excludes whitespace and comments"/>
                    </StackPanel>

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Left">
                            <TextBlock Text="Optimized:" Margin="0,0,8,0"/>
                            <TextBlock Text="{Binding OptimizedSize, StringFormat=N0}" Margin="0,0,4,0"/>
                            <TextBlock Text="characters" Margin="0,0,8,0"/>
                            <materialDesign:PackIcon Kind="InfoCircle" Width="16" Height="16" Foreground="{DynamicResource PrimaryHueLightBrush}"
                                                 ToolTip="Excludes whitespace and comments"/>
                        </StackPanel>

                        <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,0,16,0">
                            <TextBlock Text="Delta:" Margin="0,0,8,0"/>
                            <TextBlock Text="{Binding DeltaSize, StringFormat=N0}" Margin="0,0,4,0"/>
                            <TextBlock Text="characters" Margin="0,0,8,0"/>
                        </StackPanel>
                    </Grid>
                </UniformGrid>
            </Grid>

            <materialDesign:Snackbar Grid.Row="1" VerticalAlignment="Bottom" MessageQueue="{Binding MyMessageQueue}" />
        </Grid>

        <!-- Custom options dialog -->
        <materialDesign:DialogHost.DialogContent>
            <Grid Margin="24,16">
                <Grid.Resources>
                    <Style TargetType="CheckBox" BasedOn="{StaticResource MaterialDesignCheckBox}">
                        <Setter Property="Margin" Value="0,4" />
                    </Style>
                </Grid.Resources>

                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.5*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="0.5*"/>
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Row="0" Grid.Column="0">
                    <CheckBox x:Name="removeCommentsCheck" Content="Remove comments" ToolTip="TODO" IsChecked="{Binding CustomOptions.RemoveComments}"/>
                    <CheckBox Content="Keep header comments" ToolTip="TODO" IsChecked="{Binding CustomOptions.KeepHeaderComments}" Margin="16,4" IsEnabled="{Binding IsChecked, ElementName=removeCommentsCheck}"/>
                    <CheckBox Content="Remove unused functions" ToolTip="TODO" IsChecked="{Binding CustomOptions.RemoveUnusedFunctions}"/>
                    <CheckBox Content="Remove unused variables" ToolTip="TODO" IsChecked="{Binding CustomOptions.RemoveUnusedVariables}"/>
                    <CheckBox Content="Remove unreachable code" ToolTip="TODO" IsChecked="{Binding CustomOptions.RemoveUnreachableCode}"/>
                    <CheckBox Content="Remove disabled code" ToolTip="TODO" IsChecked="{Binding CustomOptions.RemoveDisabledCode}"/>
                    <CheckBox Content="Simplify function declarations" ToolTip="TODO" IsChecked="{Binding CustomOptions.SimplifyFunctionDeclarations}"/>
                    <CheckBox Content="Simplify function parameters" ToolTip="TODO" IsChecked="{Binding CustomOptions.SimplifyFunctionParams}"/>
                    <CheckBox Content="Group variable declarations" ToolTip="TODO" IsChecked="{Binding CustomOptions.GroupVariableDeclarations}"/>
                    <CheckBox Content="Join variable declarations and assignments" ToolTip="TODO" IsChecked="{Binding CustomOptions.JoinVariableDeclarationsWithAssignments}"/>
                    <CheckBox Content="Detect new constants" ToolTip="TODO" IsChecked="{Binding CustomOptions.DetectConstants}"/>
                    <CheckBox Content="Inline constant variables" ToolTip="TODO" IsChecked="{Binding CustomOptions.InlineConstantVariables}"/>
                    <CheckBox Content="Inline constant #defines" ToolTip="TODO" IsChecked="{Binding CustomOptions.InlineDefines}"/>
                </StackPanel>

                <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" Margin="16,0">
                    <Separator Width="3" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                </StackPanel>

                <StackPanel Grid.Row="0" Grid.Column="2">
                    <CheckBox Content="Simplify float number format" ToolTip="TODO" IsChecked="{Binding CustomOptions.SimplifyFloatFormat}"/>
                    <CheckBox Content="Simplify vector construction" ToolTip="TODO" IsChecked="{Binding CustomOptions.SimplifyVectorConstructors}"/>
                    <CheckBox Content="Simplify vector references" ToolTip="TODO" IsChecked="{Binding CustomOptions.SimplifyVectorReferences}"/>
                    <CheckBox Content="Simplify branching" ToolTip="TODO" IsChecked="{Binding CustomOptions.SimplifyBranching}"/>
                    <CheckBox Content="Combine consecutive assignments" ToolTip="TODO" IsChecked="{Binding CustomOptions.CombineConsecutiveAssignments}"/>
                    <CheckBox Content="Combine assignment with 'return'" ToolTip="TODO" IsChecked="{Binding CustomOptions.CombineAssignmentWithReturn}"/>
                    <CheckBox Content="Introduce +=, -=, /=, *=" ToolTip="TODO" IsChecked="{Binding CustomOptions.IntroduceMathOperators}"/>
                    <CheckBox Content="Simplify mathematical expressions" ToolTip="TODO" IsChecked="{Binding CustomOptions.SimplifyArithmetic}"/>
                    <CheckBox Content="Perform simple arithmetic" ToolTip="TODO" IsChecked="{Binding CustomOptions.PerformArithmetic}"/>
                </StackPanel>

                <StackPanel Grid.Row="1" Grid.Column="0" Orientation="Horizontal" Margin="0,16,0,0" VerticalAlignment="Center">
                    <materialDesign:PackIcon Kind="InfoCircle" Width="16" Height="16" Foreground="{DynamicResource PrimaryHueLightBrush}"/>
                    <TextBlock Text="See tooltips for more information" Margin="4,0" VerticalAlignment="Center"/>
                </StackPanel>

                <Button Grid.Row="1" Grid.Column="2" Content="APPLY" Command="{Binding OnCustomOptionsAcceptedCommand}" HorizontalAlignment="Right" Margin="0,16,0,0" Foreground="White"/>
            </Grid>
        </materialDesign:DialogHost.DialogContent>
    </materialDesign:DialogHost>
</Window>
